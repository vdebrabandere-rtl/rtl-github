---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";

interface Props {
  imagePath: string;
  altText: string;
  className?: string;
  width?: number;
  height?: number;

  loading?: "eager" | "lazy";
}

// Destructuring props
const { imagePath, altText, className, width, height, loading} = Astro.props;

// Import all images
const images = import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/**/*.{jpg,jpeg,png,gif,webp,svg}');

// Define a placeholder image path
const placeholderImagePath = '/src/assets/images/placeholder.jpg';

// Check if the image exists in the glob, otherwise use the placeholder
const resolvedImagePath = images[imagePath] ? imagePath : placeholderImagePath;
const image = images[resolvedImagePath]();

if (!image) throw new Error(`"${resolvedImagePath}" does not exist in glob`);
---

<Image
  src={image}
  alt={altText || "Placeholder image"}
  width={width}
  height={height}
  class={className + " c-dyn-img"}
  loading={loading}
/>
