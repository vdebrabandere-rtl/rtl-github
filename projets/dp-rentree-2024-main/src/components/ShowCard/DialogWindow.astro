---
// Dialog-window.astro
import DynImage from "../global/DynImage.astro";
import Channels from "../../data/channels.json";

import CardTag from "./CardTag.astro";

const show = Astro.props;

//  if date is empty string display Prochainement...

const date = show.date || "Prochainement...";

interface Channel {
  slug: string;
  name: string;
  link: string;
}

// Find the channel data that matches the show's channels
const matchedChannels: Channel[] = show.channels
  .map((showChannelSlug: string) =>
    Channels.find((channel: Channel) => channel.slug === showChannelSlug)
  )
  .filter((channel: Channel) => channel !== undefined);
---

<dialog class="c-show-window">
  <button class="c-show-window__focus"></button>
  <div class="c-show-window__container">
    <div class="c-show-window__media">
      <DynImage
        imagePath={`/src/assets/images/show-posters/${show.slug}.jpg`}
        altText=`Affiche de ${show.title}`
        width={1200}
        height={1800}
        className="c-show-window__image"
      />
      <DynImage
        imagePath={`/src/assets/images/show-posters/${show.slug}.jpg`}
        altText=`Affiche de ${show.title}`
        width={1200}
        height={1800}
        className="c-show-window__image c-show-window__image c-show-window__image--blurred"
      />
      {
        (show.exluPlay || show.nouveau) && (
          <div class="c-show-window__tags">
            {show.exluPlay && <CardTag label="Exclu RTL play" />}
            {show.nouveau && <CardTag label="Nouveau" />}
          </div>
        )
      }
    </div>

    <div class="c-show-window__content">
      <div class="c-show-window__title-group">
        <h4 class="c-show-window__date">{date}</h4>
        {show.title && <h3 class="c-show-window__name">{show.title}</h3>}
        {
          show.presenters && (
            <h4 class="c-show-window__presentators">
              {show.presenters.join(", ")}
            </h4>
          )
        }
      </div>

      {
        show.description && (
          <p class="c-show-window__description">{show.description}</p>
        )
      }

      <div class="c-show-window__footer">
        <ul class="c-show-window__channels">
          {
            matchedChannels.map((channel: Channel) => (
              <li class="c-show-window__channel">
                <a
                  class="c-show-window__channel-link"
                  href={channel.link}
                  target="_blank"
                >
                  <DynImage
                    imagePath={`/src/assets/images/channels/${channel.slug}.svg`}
                    altText={`${channel.name} logo`}
                    className="c-show-window__channel-icon"
                    width={72}
                    height={72}
                  />
                </a>
              </li>
            ))
          }
        </ul>

        {
          show.link && (
            <a class="c-show-window__link" href={show.link} target="_blank">
              En voir plus
            </a>
          )
        }
      </div>
    </div>
    <button
      class="c-show-window__retour"
      onclick="this.closest('dialog').close()">‚Üê Retour</button
    >
  </div>
</dialog>

<style lang="scss" is:global>
  @import "../../scss/mq.scss";

  .c-show-window {
    font-family: var(--font-family);
    border: none;
    z-index: 10;

    isolation: isolate;
  }

  .c-show-window::backdrop {
    background-color: rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(5px);
  }

  .c-show-window[open] {
    position: fixed;
    padding: 0px 0 75px 0;
    box-sizing: border-box;
    background: linear-gradient(
      180deg,
      #0e1b3e00 49.9999%,
      var(--color-deco) 50%
    );

    color: var(--color-dark-300);
    width: 85%;
    max-width: 750px;
    box-sizing: border-box;
    border-radius: 25px;

    margin: auto;
    margin-top: 0;

    overflow-y: scroll;
  }

  @media all and (max-width: 750px) {
    .c-show-window[open] {
      width: 95%;
      max-width: 100%;
    }
  }

  /* Hide scrollbar for Chrome, Safari and Opera */
  .c-show-window[open]::-webkit-scrollbar {
    display: none;
  }

  /* Hide scrollbar for IE, Edge, and Firefox */
  .c-show-window[open] {
    -ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none; /* Firefox */
  }

  .c-show-window[open]::before {
    content: "";
    position: absolute;
    top: 200px;
    left: 0;
    bottom: 0;
    right: 0;
    border-radius: 25px;
    background-color: var(--color-deco);
  }

  .c-show-window__container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 24px;
    width: 100%;
    height: fit-content;
    overflow-y: visible;
    box-sizing: border-box;

    // &::after {
    //   content: "";
    //   position: absolute;
    //   bottom: -75px;
    //   left: 0;
    //   width: 100%;
    //   height: calc(150px + 75px );

    //   background: linear-gradient(180deg, #00000000 0%,  #000 100%);
    //   z-index: 10;
    // }
  }

  .c-show-window__tags {
    position: absolute;
    bottom: -12px;

    display: flex;
    justify-content: center;
    align-items: center;
    gap: 6px;
    z-index: 9999;
  }

  .c-show-window__media {
    position: relative;
    display: flex;
    justify-content: center;

    width: 90%;
    min-height: 200px;
    height: 50vh;
    margin-top: 5vh;
    margin-bottom: 24px;

    z-index: 10;

    filter: drop-shadow(0px 5px 30px rgba(0, 0, 0, 0.5));
  }

  .c-show-window__image {
    width: auto;
    max-width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: 25px;
    transition: transform 0.4s ease-in-out;

    &--blurred {
      position: absolute;
      top: 0;
      z-index: -1;
      filter: blur(8px);

      -webkit-backface-visibility: hidden;
      -moz-backface-visibility: hidden;
      -webkit-transform: translate3d(0, 0, 0);
      -moz-transform: translate3d(0, 0, 0);
    }
  }

  .c-show-window__content {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0px 75px;
    gap: 42px;
    z-index: 1;
    background-color: var(--color-deco);
  }
  .c-show-window__content::before {
    content: "";
    position: absolute;
    top: -150px;
    left: 0;
    bottom: 0;
    right: 0;
    z-index: -1;
    background-color: var(--color-deco);
  }

  .c-show-window__content{
    margin-top: 24px;
  }

  @media all and (max-width: 750px) {
    .c-show-window__content {
      padding: 0 60px;
    }
  }

  @media all and (max-width: 540px) {
    .c-show-window__content {
      padding: 0 24px;
    }
  }

  .c-show-window__title-group {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    gap: 6px;
  }

  .c-show-window__date {
    font-size: 1.5rem;
    font-weight: 500;
    line-height: 1;
    opacity: 0.9;
    margin: 0;
    text-align: center;
  }

  .c-show-window__name {
    font-size: clamp(2rem, 5vw, 4rem);
    font-weight: 800;
    line-height: 1;
    text-wrap: balance;
    margin: 0;
    text-align: center;
    margin-bottom: 6px;
  }

  .c-show-window__presentators {
    font-size: 1.3rem;
    font-weight: 500;
    opacity: 0.7;
    margin: 0;
    text-align: center;
    width: 75%;
  }

  .c-show-window__description {
    font-size: 1.1rem;
    line-height: 1.75;
    font-weight: 500;
    margin: 0;
    white-space: pre-line;

    transition: max-height 0.4s ease-out;
  }

  .c-show-window__footer {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    width: 100%;

    filter: drop-shadow(0px 5px 12px rgba(0, 0, 0, 0.5));
  }

  .c-show-window__link {
    margin-left: auto;
    padding: 12px;
  }

  .c-show-window__link svg {
    transition: all 0.3s ease-in-out;
  }

  .c-show-window__link:hover > svg {
    transform: scale(1.05);
    transition: all 0.3s ease-in-out;
  }

  .c-show-window__channels {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    height: 35px;
    gap: 18px;

    list-style: none;
    padding: 0;
    margin: 0;
  }

  .c-show-window__channel {
    height: 100%;
  }

  .c-show-window__channel-link:hover .c-show-window__channel-icon {
    transform: scale(1.02);
    transition: all 0.4s ease-in-out;
  }

  .c-show-window__channel-icon {
    height: 100%;
    transition: all 0.4s ease-in-out;
  }

  .c-show-window__retour {
    position: relative;
    margin: 0 75px;
  }

  .c-show-window__focus {
    position: absolute;
    opacity: 0;
    height: 0;
    padding: 0;
    margin: 0;
    outline: none;
  }
</style>
