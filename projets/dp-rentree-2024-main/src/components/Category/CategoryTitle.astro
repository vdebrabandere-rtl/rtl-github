---
import FloatingIcon from "../global/FloatingIcon.astro";

const { category, child } = Astro.props;

const icons = category.icons;

const hasIcons = icons !== undefined && icons.length > 0;

let iconLeft: string = "";
let iconRight: string = "";

if (hasIcons) {
  iconLeft = icons[0];
  iconRight = icons[1];
}
---

<div class=`c-category-title-container ${child ? 'child' : 'main'} `>
  <h2 class=`c-category__title ${child ? 'c-category__title--child' : ''}`>
    {category.title}
  </h2>

  {
    hasIcons && (
      <FloatingIcon
        title={iconLeft}
        pathFolder="categories-icons"
        className="c-category__icon c-category__icon--left"
      />
    )
  }

  {
    hasIcons && (
      <FloatingIcon
        title={iconRight}
        pathFolder="categories-icons"
        className="c-category__icon c-category__icon--right"
      />
    )
  }
</div>

<style lang="scss" is:global>
  @import "../../scss/mq.scss";
  .c-category-title-container {
    position: relative;
    margin: 2rem 0;
  }

  .c-category-title-container.main {
    position: relative;
    isolation: isolate;

    width: 100%;
    padding: 120px 250px;
    box-sizing: border-box;

    display: flex;
    align-items: center;
    justify-content: center;

    &::before {
      --box-shadow-angle: 4px;
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      z-index: -1;

      border-radius: 25px;

      box-shadow:
        calc(var(--box-shadow-angle) / 2) calc(var(--box-shadow-angle))
          calc(var(--box-shadow-angle) * 4) rgba(32, 21, 18, 0.15),
        inset calc(var(--box-shadow-angle) * -1)
          calc(var(--box-shadow-angle) * -1) calc(var(--box-shadow-angle) * 2)
          rgba(32, 21, 18, 0.15),
        inset calc(var(--box-shadow-angle) * -1) calc(var(--box-shadow-angle))
          calc(var(--box-shadow-angle) * 2) rgba(255, 255, 255, 0.15);

      background-color: var(--color-deco);
    }
  }

  .c-category__title {
    width: fit-content;
    
    font-family: var(--font-family);
    font-weight: 800;
    font-size: clamp(2.5rem, 7vw, 5rem);
    text-align: center;
    text-wrap: balance;

    color: var(--color-accent);
    filter: drop-shadow(0px 4px 12px rgba(235, 65, 61, 0.4));

    margin: 0;
    line-height: 1;
    margin-bottom: 0.2em;
  }

  .c-category__title--child {
    font-size: clamp(2rem, 5vw, 3rem);
  }

  .c-category__icon {
    position: absolute;
    width: 150px;
    height: 150px;
    margin: 0 1rem;

    img {
      object-fit: contain;
    }
  }

  .c-category__icon--left {
    top: -100px;
    left: 0;

    rotate: -15deg;
  }

  .c-category__icon--right {
    bottom: -100px;
    right: 0;

    rotate: 15deg;
  }

  @media all and (min-width: $mq-tablet) {
    .c-category__title{
      text-wrap: nowrap;
    }
    .c-category__icon {
      width: 200px;
      height: 200px;
    }
  }

  @media all and (min-width: $mq-desktop) {
    .c-category__icon {
      width: 250px;
      height: 250px;
    }
  }
</style>
